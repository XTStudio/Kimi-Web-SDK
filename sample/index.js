(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
"use strict";var __extends=this&&this.__extends||function(){var e=function(i,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(i,t)};return function(i,t){function o(){this.constructor=i}e(i,t),i.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),FooViewController=function(e){function i(){var i=null!==e&&e.apply(this,arguments)||this;return i.sampleView=new UIStackView([]),i.redView=new UIView,i.yellowView=new UIView,i.blueView=new UIView,i}return __extends(i,e),i.prototype.viewDidLoad=function(){e.prototype.viewDidLoad.call(this),this.redView.backgroundColor=UIColor.red,this.redView.tag=100,this.yellowView.backgroundColor=UIColor.yellow,this.yellowView.tag=101,this.blueView.backgroundColor=UIColor.blue,this.blueView.tag=102,this.sampleView.addArrangedSubview(this.redView),this.sampleView.addArrangedSubview(this.yellowView),this.sampleView.addArrangedSubview(this.blueView),this.sampleView.layoutArrangedSubview(this.yellowView,{width:50}),this.sampleView.layoutArrangedSubview(this.blueView,{width:50}),this.sampleView.axis=UILayoutConstraintAxis.horizontal,this.sampleView.distribution=UIStackViewDistribution.fill,this.view.addSubview(this.sampleView)},i.prototype.viewWillLayoutSubviews=function(){e.prototype.viewWillLayoutSubviews.call(this),this.sampleView.frame={x:0,y:0,width:300,height:88}},i}(UIViewController),fooWindow=new UIWindow;fooWindow.rootViewController=new FooViewController,global.fooWindow=fooWindow;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);
